version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:22181

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    expose:
      - '9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1\
    restart: on-failure

  init-kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29092 --list

      echo -e 'Creating kafka topic'
      kafka-topics --bootstrap-server kafka:9092 --create --if-not-exists --topic metric-from-room-event --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topic:'
      kafka-topics --bootstrap-server kafka:9092 --list
      "

  postgres:
    image: postgres:latest
    container_name: "postgresdb"
    ports:
      - 5432:5432
    environment:
        POSTGRES_PASSWORD: password
        POSTGRES_USER: postgres
    volumes:
      - ./sql:/docker-entrypoint-initdb.d

  metric-service:
    image: smartoffice/metric-service
    ports:
      - 8080:8080
    depends_on:
      - zookeeper
      - kafka
      - init-kafka
      - postgres
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/MetricsDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    restart: on-failure

  office-service:
    image: smartoffice/office-service
    ports:
      - 8081:8081
    depends_on:
      - zookeeper
      - kafka
      - init-kafka
      - postgres
      - metric-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/OfficeDB
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    restart: on-failure
